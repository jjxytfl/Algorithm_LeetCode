class Solution {
public:
	vector<int> nodesBetweenCriticalPoints(ListNode* head) {
		vector<int> h;
		while (head!=nullptr){
			h.push_back(head->val);
			head = head->next;
		}

		vector<int> ret;
		int n = h.size();
		for (int i = 1; i < n - 1; i++){
			if ((h[i]>h[i - 1] && h[i] > h[i + 1]) || (h[i] < h[i - 1] && h[i] < h[i + 1])){
				ret.push_back(i);
			}
		}

		if (ret.size() < 2)return{ -1, -1 };

		int mind = INT_MAX;
		int maxd = ret[ret.size() - 1] - ret[0];

		for (int i = 1; i < ret.size(); i++){
			mind = min(mind, ret[i] - ret[i - 1]);
		}

		return{ mind, maxd };
	}
};