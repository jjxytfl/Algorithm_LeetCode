#include<iostream>
#include <vector>//  动态规划    可对空间进行优化  因为dp[i][j]只跟dp[i-1][j],dp[i][j-1]有关



using namespace std;




class Solution {
public:
	int uniquePaths(int m, int n) {
		vector<vector<int>> dp;
		for (int i = 0; i < m; ++i){
			if (i == 0){
				dp.push_back(vector<int>(n, 1));
			}
			else{
				dp.push_back(vector<int>(n, 0));
				dp[i][0] = 1;
			}
		}
		for (int i = 1; i < m; ++i){
			for (int j = 1; j < m; ++j){
				dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
			}
		}
		return dp[m - 1][n - 1];
	}
};



int main()
{
	Solution a;

	system("pause");
	return 0;
}
