class Solution {
public:
	int ret,n,m;

	int getMaximumGold(vector<vector<int>>& grid) {
		n = grid.size();
		m = grid[0].size();
		ret = 0;


		for (int i = 0; i < n; i++){
			for (int j = 0; j < m; j++){
				if (grid[i][j] != 0){
					helper(grid, i, j, 0);
				}
			}
		}

		return ret;
	}


	void helper(vector<vector<int>>& grid, int i, int j,int ans){
		if (i < 0 || j < 0 || i >= n || j >= m || grid[i][j]==0){
			ret = max(ret, ans);
			return;
		}
		int temp = grid[i][j];
		grid[i][j] = 0;

		helper(grid, i + 1, j, ans + temp);
		helper(grid, i , j + 1, ans + temp);
		helper(grid, i - 1, j, ans + temp);
		helper(grid, i , j - 1, ans + temp);

		grid[i][j] = temp;


	}
};