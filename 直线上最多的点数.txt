给定一个二维平面，平面上有N个点，求最多有多少个点在同一条直线上。




#include<string.h>
#include<windows.h>
#include<stdio.h>
#include<stdlib.h>

float * Shuru(int *l)
{
	int *a=NULL;
	int i=0;
	int n;
	while (1)
	{
		printf("请输入第%d个坐标;(-1结束)\n",i/2+1);
		scanf("%d", &n);
		if (n == -1)break;
		a = (int *)realloc(a,sizeof(int)*(i+2));
		a[i] = n;
		scanf("%d", &n);
		a[i + 1] = n;
		i += 2;
	}
	*l = i / 2;

	return a;
}

void Gongxian(float *zb, int l)
{
	int i, j;
	float k, b;
	float k1, b1;
	int max, a;
	max = 0;
	for (i = 0; i < l - 1; i++)
	{
		a = 0;
		k = (zb[2 * (i + 1) + 1] - zb[2 * i + 1]) / (zb[2 * (i + 1)] - zb[2 * i]);
		b = zb[2 * i + 1] - (zb[2 * i] * (zb[2 * (i + 1) + 1] - zb[2 * i + 1]) / (zb[2 * (i + 1)] - zb[2 * i]));
		for (j = i + 1; j < l; j++)
		{
			k1 = (zb[2 * j + 1] - zb[2 * i + 1]) / (zb[2 * j] - zb[2 * i]);
			b1 = zb[2 * i + 1] - (zb[2 * i] * (zb[2 * j + 1] - zb[2 * i + 1]) / (zb[2 * j] - zb[2 * i]));
			if (k1 == k&&b1 == b)a++;
		}
		if (a>max)max = a;
	}

	printf("其中最多有%d个坐标共线\n", max + 1);


}

int main()
{
	float *zb;
	int l;
	int *xl;
	
	zb = Shuru(&l);
	Gongxian(zb, l);

	free(zb);

	system("pause");
}

